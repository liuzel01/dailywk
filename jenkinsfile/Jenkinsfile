// github 凭证
// def git_auth = "34b1e85f-6740-4e5c-992f-22515277f631"
def git_auth = "e143854e-b2d8-4503-b375-f8c9622d9126"
// 构建版本的名称
// 使用 github仓库的 comment id 作为 imageTag 
// 镜像仓库地址
def harbor_url = "harbor.seedslabs.io/seeds-java"
def harbor_auth = "74986a96-18ed-4089-bd09-9112ecce119d"
    node{
        stage('Clone') {
            echo "1. 拉取代码"
            checkout([$class: 'GitSCM', branches: [[name: '*/uat']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "${git_auth}", url: 'https://github.com/yangkangduke/seeds-java.git']]])
            sh "git rev-parse --short=7 HEAD > commit_id"
            env.imageTag = readFile('commit_id').trim()
            sh "rm commit_id"

            // echo "imageTag: ${imageTag}"
            // echo "imageTag: ${env.imageTag}"
        }

        stage('build'){
            echo "2. 编译构建"
            sh "mvn clean install -pl ${JOB_NAME} -am -amd -Puat -Dmaven.test.skip=true "
        }

        stage('build image'){
            echo "3. 构建本地镜像"
            env.imageName = "${JOB_NAME}:${imageTag}"

            sh """
            docker build -t ${harbor_url}/${imageName} ./${JOB_NAME} 
            """
            withCredentials([usernamePassword(credentialsId: "${harbor_auth}", passwordVariable: 'password', usernameVariable: 'username')]) {
                sh """
                docker login -u ${username} -p ${password} ${harbor_url}
                docker push ${harbor_url}/${imageName}
                """
                }
            sh """
            docker rmi -f ${harbor_url}/${imageName}
            echo '本地镜像删除成功'
            """
        }
        stage('kubectl apply'){
            echo "4. 远程部署"
            // def imageName = "${JOB_NAME}:${imageTag}"
            // echo "repository: ${harbor_url}\/${imageName}"
            def userInput = input(
                id: 'userInput',
                message: '是否需要升级？',
                parameters: [
                    [
                    $class: 'ChoiceParameterDefinition',
                    choices: "Y\nN",
                    name: '升级?'
                    ]
                ]
            )
            if (userInput == "Y") {
                sh '''
image_url=harbor.seedslabs.io/seeds-java/${JOB_NAME}:${imageTag}

kubectl set image deploy/${JOB_NAME} ${JOB_NAME}=${image_url} --record=true -nseeds-uat
'''
            }
        }
        stage("rollout") {
            echo "是否需要回滚？"
            def userInput = input(
                id: 'userInput',
                message: '是否需要回滚？',
                parameters: [
                    [
                    $class: 'ChoiceParameterDefinition',
                    choices: "N\nY",
                    name: '回滚?'
                    ]
                ]
            )
            if (userInput == "Y") {
                sh """
                    kubectl rollout undo deploy ${JOB_NAME} -nseeds-uat
                """
            }
        }
    }