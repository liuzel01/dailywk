# # mysql-deployment-status-scale
# #设置持久卷
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pv-claim
#   # namespace: default 
#   labels:
#     app: mysql
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 20Gi
# ---
#对外服务
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  type: NodePort
  selector:
      app: mysql
  ports:
  - protocol : TCP
    # nodePort: 30306
    port: 3306
    targetPort: 3306
---
#有状态服务
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-deployment
spec:
  replicas: 3
  serviceName: mysql
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: harbor.seedslabs.io/seeds-db/mysql8:latest 
        imagePullPolicy: Always
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: Seeds123! 
        # args: ["--default-authentication-plugin=mysql_native_password"]
        resources:
          requests:
            cpu: "50m"
            memory: 1Gi
          limits:
            cpu: "50m"
            memory: 1Gi
        volumeMounts:
        - name: mysql-store
          mountPath: /home/storageVolume/mysql  # MySQL容器的数据默认都是存在这个目录
          subPath: mysqldata                    # 这里通过subPath挂载到子目录，就可以避免出错
      imagePullSecrets:
        - name: harbor-uat
  volumeClaimTemplates:
  - metadata: 
      name: mysql-store
    spec: 
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard-rwo"
      resources: 
        requests:
          storage: 20Gi

      # volumes:
      # - name: mysql-store
      #   persistentVolumeClaim:
      #     claimName: mysql-pv-claim             #存储卷名称使用上一步创建的持久卷名称
